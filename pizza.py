from typing import List, Dict, Union
from pizza import *


def full_menu_str() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –ø–æ–ª–Ω—ã–º –º–µ–Ω—é."""
    menu = []
    for pizza in [Margherita, Pepperoni, Hawaiian]:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∏—Ü—Ü—ã
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –ø–∏—Ü—Ü–µ –≤ –º–µ–Ω—é
        menu.append(f"- {pizza.name()} {pizza.emoji} : {', '.join(pizza.ingredients)}")
    return "\n".join(menu)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏


class Pizza:
    AVAILABLE_PIZZA_SIZES: List[str] = ["L", "XL"]  # –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ü—Ü—ã
    is_baked: bool  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –≤—ã–ø–µ—á–µ–Ω–∞ –ª–∏ –ø–∏—Ü—Ü–∞
    is_delivered: bool  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ª–∏ –ø–∏—Ü—Ü–∞
    is_pickup: bool  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∑–∞–±—Ä–∞–Ω–∞ –ª–∏ –ø–∏—Ü—Ü–∞

    def __init__(self, size: str = "L") -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∏—Ü—Ü—É —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º."""
        if size.upper() not in self.AVAILABLE_PIZZA_SIZES:
            string_error = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"
            raise ValueError(string_error)
        self.size = size
        self.is_baked = False
        self.recipe = []

    def bake(self) -> None:
        """–í—ã–ø–µ–∫–∞–µ—Ç –ø–∏—Ü—Ü—É."""
        self.is_baked = True

    def delivery(self) -> None:
        """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É."""
        print("ddcf")
        self.is_delivered = True

    def pickup(self) -> None:
        """–ó–∞–±–∏—Ä–∞–µ—Ç –ø–∏—Ü—Ü—É."""
        self.is_pickup = True

    @classmethod
    def name(cls) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã."""
        pizza_name = cls.__name__
        return pizza_name

    def get_recipe(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã."""
        return ", ".join(self.recipe)

    def __str__(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø–∏—Ü—Ü—ã."""
        return (
            f"{type(self).name()}, " f"–†–∞–∑–º–µ—Ä: {self.size}, –í—ã–ø–µ—á–µ–Ω–∞: {self.is_baked}"
        )

    def __repr__(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ü—Ü—ã —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –û–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–µ—á–µ–Ω–∞."""
        return f"{type(self).__name__}(size={self.size!r})"

    def __eq__(self, other: object) -> bool:
        """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø–∏—Ü—Ü—ã –ø–æ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º. –û–Ω–∏ –±—É–¥—É—Ç —Ä–∞–≤–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–º —Ä–µ—Ü–µ–ø—Ç–µ, —Ä–∞–∑–º–µ—Ä–µ –∏ –Ω–∞–∑–≤–∞–Ω–∏–∏."""
        if not isinstance(other, Pizza):
            return NotImplemented
        return (
            (set(self.recipe) == set(other.recipe))
            & (self.name() == other.name())
            & (self.size == other.size)
        )

    def dict(self) -> Dict[str, Dict[str, str]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º=–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã, –∑–Ω–∞—á–µ–Ω–∏–µ=—Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã."""
        return {self.name(): self.get_recipe()}


class Margherita(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞."""

    emoji = "üßÄ"
    ingredients = ["tomato sauce", "mozzarella", "tomatoes"]

    def __init__(self, size: str = "L") -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º."""
        super().__init__(size)
        self.recipe = self.ingredients


class Pepperoni(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏."""

    emoji = "üçï"
    ingredients = ["tomato sauce", "mozzarella", "pepperoni"]

    def __init__(self, size: str = "L") -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º."""
        super().__init__(size)
        self.recipe = self.ingredients


class Hawaiian(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ì–∞–≤–∞–π—Å–∫–∞—è."""

    emoji = "üçç"
    ingredients = ["tomato sauce", "mozzarella", "chicken", "pineapples"]

    def __init__(self, size: str = "L") -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ì–∞–≤–∞–π—Å–∫–∞—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º."""
        super().__init__(size)
        self.recipe = self.ingredients
